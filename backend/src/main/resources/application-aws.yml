spring:
  # AWS RDS 연결
  datasource:
    url: jdbc:mysql://hirehub-db.cx2suwmo0815.ap-northeast-2.rds.amazonaws.com:3306/hirehub?useSSL=true&serverTimezone=Asia/Seoul&characterEncoding=utf8
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    hikari:
      maximum-pool-size: 20
      minimum-idle: 4

  jpa:
    hibernate:
      ddl-auto: validate   # 운영은 validate 권장 (스키마 미리 준비)
    show-sql: false
    properties:
      hibernate:
        format_sql: false
        jdbc.time_zone: Asia/Seoul

  sql:
    init:
      mode: never

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_SECRET}
            scope: openid,profile,email
            redirect-uri: "{baseUrl}/login/oauth2/code/google"
            client-name: Google
          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            redirect-uri: "{baseUrl}/login/oauth2/code/kakao"
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_post
            scope:
              - profile_nickname
              - account_email
          naver:
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            client-name: Naver
            redirect-uri: "{baseUrl}/login/oauth2/code/naver"
            authorization-grant-type: authorization_code
            scope: [ name, email ]

        provider:
          google:
            issuer-uri: https://accounts.google.com
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
          naver: # [ADDED]
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

# 프록시/ALB 뒤에서 baseUrl 정확히 잡히도록
server:
  port: 8080
  forward-headers-strategy: framework

# 카카오 리다이렉트/프론트 URL은 운영 도메인 기준
kakao:
  oauth:
    redirect-uri: ${KAKAO_REDIRECT_URI:https://api.your-domain.com/kakao/callback}
    front-redirect-url: ${APP_FRONT_REDIRECT_URL:https://app.your-domain.com/auth/callback}
naver:                                         # [ADDED]
  oauth:
    client-id: ${NAVER_CLIENT_ID}
    client-secret: ${NAVER_CLIENT_SECRET}
    redirect-uri: ${NAVER_REDIRECT_URI:https://api.your-domain.com/naver/callback}
    front-redirect-url: ${APP_FRONT_REDIRECT_URL:https://app.your-domain.com/auth/callback}

# CORS 운영 도메인
app:
  front:
    base-url: "http://localhost:3000"
    url: "http://localhost:3000"

  cors:
    allowed-origins: "http://localhost:3000"

aws:
  s3:
    bucket: hirehub-s3-bucket
  credentials:
    access-key: ${AWS_ACCESS_KEY}
    secret-key: ${AWS_SECRET_KEY}
  region: ap-northeast-2

logging:
  level:
    org.hibernate.SQL: info
    org.springframework.security: DEBUG
