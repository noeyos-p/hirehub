aws:
  s3:
    bucket: hirehub-s3-bucket
  credentials:
    access-key: test-access-key
    secret-key: test-secret-key
  region: ap-northeast-2

spring:
  datasource:
    url: jdbc:mysql://localhost:3306/hirehub?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Seoul&characterEncoding=utf8
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: ${MYSQL_USER}
    password: ${MYSQL_PASSWORD}
    hikari:
      maximum-pool-size: 10
      minimum-idle: 2

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_SECRET}
            scope: openid,profile,email
            redirect-uri: "http://localhost:8080/login/oauth2/code/google"
            client-name: Google
        provider:
          google:
            issuer-uri: https://accounts.google.com

  jpa:
    # ✅ 문제되는 매핑을 우회하기 위해 orm.xml 적용(엔티티 수정 없이도 안전)
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        jdbc.time_zone: Asia/Seoul

  sql:
    init:
      mode: never

server:
  port: 8080

logging:
  level:
    org.hibernate.SQL: debug
    org.hibernate.orm.jdbc.bind: trace   # 바인딩 파라미터까지 보고 싶으면