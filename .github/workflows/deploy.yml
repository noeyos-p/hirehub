name: CI/CD Monorepo

on:
  push:
    branches: [ "main" ]
    paths:
      - 'backend/**'
      - 'frontend/**'
      - 'infra/**'
      - '.github/workflows/deploy.yml'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: backend
            context: backend
            imagename: hirehub-backend
          - name: frontend
            context: frontend
            imagename: hirehub-frontend
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push ${{ matrix.name }}
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.context }}
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.imagename }}:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.imagename }}:${{ github.sha }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Deploy on EC2 via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -e

            echo "üõ†Ô∏è Docker Ïù¥ÎØ∏ÏßÄ pull..."
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/hirehub-backend:latest
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/hirehub-frontend:latest

            echo "üìÇ ÎîîÎ†âÌÑ∞Î¶¨ Ï§ÄÎπÑ..."
            cd ~/app || { mkdir -p ~/app; cd ~/app; }

            echo "üß© .env.prod ÌååÏùº ÏÉùÏÑ±..."
            cat <<EOF > .env.prod
            RDS_ENDPOINT=${{ secrets.RDS_ENDPOINT }}
            SPRING_PROFILES_ACTIVE=${{ secrets.SPRING_PROFILES_ACTIVE }}
            USERNAME=${{ secrets.DB_USERNAME }}
            PASSWORD=${{ secrets.DB_PASSWORD }}
            GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
            GOOGLE_SCREET=${{ secrets.GOOGLE_SCREET }}
            AWS_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY }}
            AWS_SECRET_KEY=${{ secrets.AWS_SECRET_KEY }}
            ALLOWED_ORIGINS=${{ secrets.ALLOWED_ORIGINS }}
            DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}
            BACKEND_IMAGE=${{ secrets.BACKEND_IMAGE }}
            FRONTEND_IMAGE=${{ secrets.FRONTEND_IMAGE }}
            EOF

            echo "üöÄ Docker Compose Ïã§Ìñâ..."
            docker compose -f infra/docker-compose.prod.yml --env-file .env.prod up -d --remove-orphans
